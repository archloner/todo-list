(()=>{"use strict";var e=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t={};e(t);var i={};e(i);var s={};function n(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function o(e){n(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}e(s);let a=0;class l{createdDate;title;description;dueDate;priority;isComplete;isCollapsed;log;notes;checklist;constructor(e,t,i,s){this.id=class{static nextIndex(){return a++}static reset(){a=0}}.nextIndex(),this.title=e,this.description=t,this.dueDate=i,this.priority=s,this.createdDate=new Date,this.isComplete=!1,this.isCollapsed=!0,this.notes=null,this.checklist=[],this.log=[]}isComplete(){return!0===isComplete}markAsComplete(){this.isComplete=!0}markAsNotComplete(){this.isComplete=!1}toggleComplete(){this.isComplete=!this.isComplete}setIsCollapsed(e){this.isCollapsed=e}toggleIsCollapsed(){this.isCollapsed=!this.isCollapsed}getDOMElement(){return(new t.ContentView).getTaskDOMElement(this)}isOverdue(){return function(e,t){n(2,arguments);var i=o(e),s=o(t);return i.getTime()<s.getTime()}(this.dueDate,new Date)&&!this.isComplete}}class c{static LOW="low";static MEDIUM="medium";static HIGH="high";static DEFAULT="default"}new l("Update about page header","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,1,20),c.DEFAULT),new l("Fix bug in deployment script","Lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,19),c.MEDIUM),new l("Update contact page header","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,1,20),c.DEFAULT),new l("About page wording","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,22),c.HIGH),new l("New landing page layout","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,17),c.MEDIUM),new l("Update global iconset","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,1,27),c.LOW),new l("New case study thumbnails","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,28),c.DEFAULT),new l("Buy Pizza","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,30),c.HIGH),new l("Tomatoes","Lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,30),c.DEFAULT),new l("50 BrzuszkÃ³w","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,30),c.DEFAULT),new l("50 Pompek","Lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,30),c.DEFAULT),new l("Lord of The Rings: The Fellowship of the Ring","Lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,30),c.MEDIUM),new l("Do Androids Dream of Electric Sheep","Lorem ipsum dolor sit amet, consectetur adipiscing elit, lorem ipsum dolor sit amet, consectetur adipiscing elit",new Date(2022,0,30),c.LOW);class r{model;controller;constructor(e){e.model&&(this.model=e.model)}setController(e){this.controller=e}render(){const e=document.querySelector(".menu-left"),t=document.querySelector(".menu");e.replaceChild(this.getMenuDOM(),t)}getMenuDOM(){const e=["fas","fa-tasks"],t=document.createElement("div");t.classList.add("menu");const i=document.createElement("ul");i.classList.add("flex-grow","menu-items"),this.model.getProjects();for(let t of this.model.getProjects())0===t.id?i.appendChild(this.getOverviewMenuItem(t)):i.appendChild(this.getMenuItem(t,e));const s=document.createElement("div");s.classList.add("line"),i.appendChild(s);const n=this.getMenuItem({title:"Done",tasks:[]},["far","fa-calendar-check"]);i.appendChild(n),t.appendChild(i);const o=document.createElement("ul");o.classList.add("push-bottom");const a=document.createElement("a");a.href="#",a.classList.add("menu-item");const l=document.createElement("li");l.innerHTML="<i class='fa fa-cog'></i> Logs",a.appendChild(l),o.appendChild(a);const c=document.createElement("a");c.href="#",c.classList.add("menu-item");const r=document.createElement("li");return r.innerHTML="<i class='fa fa-sign-out-alt'></i> Log out",c.appendChild(r),o.appendChild(c),t.appendChild(o),t}calculateProjectTasksAmount(e){return e.tasks.reduce(((e,t,i)=>e+(t.isComplete?0:1)),0)}getOverviewMenuItem(e){const t=document.createElement("a");t.href="#",t.setAttribute("data-menu-index",e.id),t.classList.add("menu-item"),this.model.getCurrentProjectId()===e.id&&t.classList.add("active");const i=document.createElement("li"),s=document.createElement("div");s.classList.toggle("flex-row");const n=document.createElement("i");n.classList.add("fa","fa-home");const o=document.createElement("div");o.classList.toggle("menu-item-text");const a=this.model.getProjectsCount();return o.innerHTML=`${e.title} <p class='tasks-amount'>${a} \n    ${1===a?"project":"projects"}</p>`,s.appendChild(n),s.appendChild(o),i.appendChild(s),t.appendChild(i),t.addEventListener("click",(t=>{t.preventDefault(),this.controller.changeCurrentProject(e.id)})),t}getMenuItem(e,t){const i=document.createElement("a");i.href="#",i.setAttribute("data-menu-index",e.id),i.classList.add("menu-item"),this.model.getCurrentProjectId()===e.id&&i.classList.add("active");const s=document.createElement("li"),n=document.createElement("div");n.classList.toggle("flex-row");const o=document.createElement("i");o.classList.add(...t);const a=document.createElement("div");if(a.classList.toggle("menu-item-text"),e.tasks){const t=this.calculateProjectTasksAmount(e);a.innerHTML=`${e.title} <p class='tasks-amount'>${t} ${1===t?"Task":"Tasks"}</p>`}return n.appendChild(o),n.appendChild(a),s.appendChild(n),i.appendChild(s),i.addEventListener("click",(t=>{t.preventDefault(),this.controller.changeCurrentProject(e.id)})),i}}class d{static DARK_MODE_DEFAULT=!1;static LOAD_WITH_SAMPLE_DATA=!0;static DEFAULT_PROJECT_ID=0;static LOCAL_STORAGE_KEY="todo-data";static NOTIFICATION_HIDE_ANIMATION_DURATION=500;static NOTIFICATION_SHOW_TIME=4e3}class m{title;description;level;constructor(e,t,i){this.title=e,this.description=t,this.level=i}}class u{wrapper;constructor(){this.wrapper=document.querySelector(".notification-wrapper"),this.init()}init(){const e=new m("Welcome","Welcome to our app, we hope you will find it useful!",c.MEDIUM);setTimeout((()=>{this.showNotification(e)}),1e3)}addCloseEventListeners(){this.wrapper.querySelectorAll(".notification-icon .close").forEach((e=>{e.addEventListener("click",(e=>{this.animateNotificationClosing(e.target.parentElement.parentElement)}))}))}animateNotificationClosing(e){e.classList.add("notification-animate-hide"),setTimeout((()=>{e.classList.remove("notification-animate-hide"),e.classList.add("hide"),this.wrapper.removeChild(e)}),d.NOTIFICATION_HIDE_ANIMATION_DURATION)}showNotification(e){const t=this.createNotificationElement(e);this.wrapper.appendChild(t),this.addCloseEventListeners(),setTimeout((()=>{this.animateNotificationClosing(t)}),d.NOTIFICATION_SHOW_TIME)}createNotificationElement(e){const t=document.createElement("div");let i;switch(t.classList.add("notification"),e.level){case c.HIGH:i="bg-danger";break;case c.MEDIUM:i="bg-medium";break;case c.LOW:i="bg-low";break;case c.DEFAULT:i="bg-default"}t.classList.add(i);const s=document.createElement("div");s.classList.add("notification-icon");const n=document.createElement("i");n.classList.add("fa-solid","fa-bell"),s.appendChild(n),t.appendChild(s);const o=document.createElement("div");o.classList.add("notification-body");const a=document.createElement("div");a.classList.add("notification-title"),a.textContent=e.title,o.appendChild(a);const l=document.createElement("div");l.classList.add("notification-text"),l.textContent=e.description,o.appendChild(l),t.appendChild(o);const r=document.createElement("div");r.classList.add("notification-icon");const d=document.createElement("i");return d.classList.add("fa-solid","fa-xmark","close"),r.appendChild(d),t.appendChild(r),t}}(new class{model;controller;view;menuView;notificationController;constructor(){this.model=new i.Model,this.menuView=new r({model:this.model}),this.view=new t.ContentView({menuView:this.menuView}),this.view.setModel(this.model),this.controller=new s.DisplayController({view:this.view,model:this.model}),this.view.setController(this.controller),this.menuView.setController(this.controller),this.notificationController=new u}init(){this.controller.init()}}).init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,